@model LoginModel
@using Nop.Core
@using Nop.Core.Domain.Customers

@inject IWebHelper webHelper
@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Login").Text);
    NopHtml.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register", new { returnUrl = this.Context.Request.Query["returnUrl"] }, webHelper.GetCurrentRequestProtocol());
}

@await Html.PartialAsync("_ExternalAuthentication.Errors")
@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.LoginTop, additionalData = Model })
<form asp-route="Login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post" autocomplete="off">
    <div asp-validation-summary="ModelOnly" class="message-error">@T("Account.Login.Unsuccessful")</div>
    <section class="login-sec d-flex align-items-center justify-content-center">
        <div class="container">
            <div class="login-cart z9 position-relative">
                <form id="login-form" class="form" action="" method="post">
                    <div class="login-hading text-center">
                        Login
                    </div>
                    <div class="form-group mb-3">
                        @if (Model.UsernamesEnabled)
                        {
                            <label class="mb-1 lable-text" asp-for="Username" asp-postfix=":" class="text-info"></label>
                            <input class="input-text" asp-for="Username" class="username" autofocus="autofocus" class="form-control" />
                            <span asp-validation-for="Username"></span>
                        }
                        else
                        {
                            <label class="mb-1 lable-text" asp-for="Email" asp-postfix=":" class="text-info"></label>
                            <input class="input-text" asp-for="Email" class="username" autofocus="autofocus" class="form-control" />
                            <span asp-validation-for="Email"></span>
                        }
                    </div>
                    <div class="form-group">
                        <label class="mb-1 lable-text" asp-for="Password" asp-postfix=":" class="text-info"></label>
                        <input class="input-text" asp-for="Password" class="password" name="password" id="password" class="form-control" />
                        <span asp-validation-for="Password"></span>
                    </div>
                    <div class="forgotandlogin-cmn">
                        <a class="fs16 fw500 a-color a-color-h my-3" href="@Url.RouteUrl("PasswordRecovery")">Forgot Password?</a>
                        <button class="loginbtn w-100 mb-4" type="submit">Login</button>
                    </div>
                    @await Component.InvokeAsync(typeof(ExternalMethodsViewComponent), "ExternalAuthentication")
                    <p class="an-account fs16 text-center mb-0">Don’t have an account? <a class="fs16 fw500 a-color opct" href="@Url.RouteUrl("Register")">Create account!</a></p>

                </form>
            </div>
        </div>
    </section>
</form>
@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.LoginBottom, additionalData = Model })

